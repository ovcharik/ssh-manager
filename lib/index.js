// Generated by CoffeeScript 1.10.0
(function() {
  var List, blessed, form, list, screen, spawn, table;

  spawn = require('child_process').spawn;

  blessed = require('blessed');

  List = require('./list');

  form = require('./form');

  list = new List;

  screen = blessed.screen({
    smartCSR: true
  });

  table = blessed.listtable({
    parent: screen,
    mouse: true,
    keys: true,
    vi: true,
    left: 0,
    top: 0,
    width: '100%',
    height: '100%',
    noCellBorders: true,
    align: 'left',
    rows: list.table,
    style: {
      header: {
        bold: true,
        fg: 'black',
        bg: 'white'
      },
      cell: {
        selected: {
          bg: 'blue'
        }
      }
    }
  });

  table.on('select', function(element, index) {
    var args, e, error;
    try {
      args = list.getArgs(index - 1);
      screen.destroy();
      console.log(['exec >', 'ssh'].concat(args).join(' '));
      return spawn('ssh', args, {
        detached: true,
        stdio: 'inherit'
      });
    } catch (error) {
      e = error;
      return console.error(e);
    }
  });

  form = form(screen);

  form.on('submit', function(data) {
    var e, error;
    if (data == null) {
      data = {};
    }
    try {
      return list.add({
        name: String(data.name) || null,
        host: String(data.host) || null,
        user: String(data.user) || null,
        port: Number(data.port) || 22
      });
    } catch (error) {
      e = error;
      return console.error(e);
    }
  });

  screen.key(['delete'], function() {
    var e, error;
    try {
      list.remove(table.selected - 1);
      return screen.render();
    } catch (error) {
      e = error;
      return console.error(e);
    }
  });

  screen.key(['C-a'], function() {
    return form.toggle();
  });

  screen.key(['escape'], function() {
    if (form.hidden) {
      return screen.destroy();
    } else {
      return form.toggle();
    }
  });

  screen.key(['C-c', 'q'], function() {
    return screen.destroy();
  });

  list.on('invalidated', function() {
    var selected;
    selected = table.selected;
    table.setRows(list.table);
    table.select(selected);
    return screen.render();
  });

  table.focus();

  screen.render();

}).call(this);
